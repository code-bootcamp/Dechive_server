# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Hashtag {
  id: String!
  hashtag: String!
  boards: [Board!]!
}

type Product {
  id: String!
  name: String!
  url: String!
  picture: String
  board: Board!
}

type Followee {
  id: String!
  followeeid: String!
  users: [User!]!
}

type Following {
  id: String!
  followingid: String!
  users: [User!]!
}

type SnsAccount {
  id: String!
  sns: String!
  user: User!
}

type User {
  id: String!
  email: String!
  nickName: String!
  intro: String
  picture: String
  jobGroup: String!
  provider: String!
  snsAccounts: [SnsAccount!]
  followings: [Following!]!
  followees: [Followee!]!
  boards: [Board!]
  like: [Board!]
}

type Comments {
  id: String!
  content: String!
  board: Board!
  user: User!
}

type Picture {
  id: String!
  url: String!
  isMain: Boolean!
  board: Board!
}

type Board {
  id: String!
  title: String!
  recommend: String
  description: String!
  products: [Product!]!
  comments: [Comments!]
  hashtags: [Hashtag!]
  pictures: [Picture!]!
  likers: [User!]
  writer: User!
  createdAt: DateTime!
  views: Int!
  likes: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type FetchUser {
  user: User!
  boardCount: Int!
  followingCount: Int!
  followeeCount: Int!
  following: Boolean!
  followee: Boolean!
}

type Youtube {
  title: String!
  videoUrl: String!
  thumbnailUrl: String!
  views: Float!
}

type Reply {
  id: String!
  content: String!
  comment: Comments!
  user: User!
}

type Query {
  fetchUser(fetchUserInput: FetchUserInput!): FetchUser!
  fetchBoard(boardid: String!): Board!
  fetchBoards: [Board!]!
  fetchBestBoards: [Board!]!
  viewBoard(boardid: String!): Board!
  searchBoard(keyword: String!): [Board!]!
  fetchFollowees(userid: String!): [User!]!
  fetchFollowings(userid: String!): [User!]!
  fetchYoutube: [Youtube!]!
}

input FetchUserInput {
  userid: String!
  guestid: String
}

type Mutation {
  login(loginInput: LoginInput!): String!
  restoreAccessToken: String!
  logOut: String!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  authEmail(email: String!): Boolean!
  matchAuthNumber(matchAuthInput: MatchAuthInput!): Boolean!
  resetUserPassword(resetPasswordInput: ResetPasswordInput!): Boolean!
  deleteUser: Boolean!
  createBoard(createBoardInput: CreateBoardInput!): Board!
  updateBoard(updateBoardInput: UpdateBoardInput!, boardid: String!): Board!
  test(a: String!): Boolean!
  deleteBoard(boardid: String!): Boolean!
  updateBoardLiker(boardid: String!): Boolean!
  createComment(createCommentInput: CreateCommentInput!): Comments!
  deleteComment(commentid: String!): Boolean!
  uploadFile(files: [Upload!]!): [String!]!
  updateFollowing(followingid: String!): Boolean!
  createReply(createReplyInput: CreateReplyInput!): Reply!
  deleteReply(replyid: String!): Boolean!
}

input LoginInput {
  email: String!
  password: String!
}

input CreateUserInput {
  email: String!
  password: String!
  jobGroup: String!
  provider: String
}

input UpdateUserInput {
  nickName: String
  intro: String
  picture: String
  snsAccount: String
  jobGroup: String
}

input MatchAuthInput {
  email: String!
  authNumber: String!
}

input ResetPasswordInput {
  email: String!
  password: String!
}

input CreateBoardInput {
  title: String!
  recommend: String
  description: String!
  views: Int! = 0
  likes: Int! = 0
  hashtags: [String!]
  createProductInputs: [CreateProductInput!]!
  uploadFile: [String!]!
}

input CreateProductInput {
  name: String!
  url: String!
}

input UpdateBoardInput {
  title: String!
  recommend: String
  description: String!
  views: Int! = 0
  likes: Int! = 0
  hashtags: [String!]
  uploadFile: [String!]!
  updateProductInputs: [CreateProductInput!]!
}

input CreateCommentInput {
  content: String!
  boardid: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateReplyInput {
  content: String!
  commentid: String!
}